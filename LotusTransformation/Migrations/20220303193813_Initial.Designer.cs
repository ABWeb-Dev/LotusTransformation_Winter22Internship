// <auto-generated />
using System;
using LotusTransformation.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LotusTransformation.Migrations
{
    [DbContext(typeof(LotusTransformationDBContext))]
    [Migration("20220303193813_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("LotusTransformation.Models.AdminClientNotes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.HasKey("Id");

                    b.ToTable("AdminClientNotes");
                });

            modelBuilder.Entity("LotusTransformation.Models.Administrator", b =>
                {
                    b.Property<int>("Key")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Key"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Key");

                    b.ToTable("Admin");
                });

            modelBuilder.Entity("LotusTransformation.Models.ClientAccountInformation", b =>
                {
                    b.Property<int>("ClientID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClientID"), 1L, 1);

                    b.Property<int?>("ContactID")
                        .HasColumnType("int");

                    b.Property<int?>("EmploymentID")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleInitial")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClientID");

                    b.HasIndex("ContactID");

                    b.HasIndex("EmploymentID");

                    b.ToTable("ClientAccountInformation");
                });

            modelBuilder.Entity("LotusTransformation.Models.ClientContactInformation", b =>
                {
                    b.Property<int>("ContactID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContactID"), 1L, 1);

                    b.Property<string>("Address1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ClientID")
                        .HasColumnType("int");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StateOrProvince")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZIPorPostal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ContactID");

                    b.HasIndex("ClientID");

                    b.ToTable("ClientContactInformation");
                });

            modelBuilder.Entity("LotusTransformation.Models.ClientDocuments", b =>
                {
                    b.Property<int>("Key")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Key"), 1L, 1);

                    b.Property<int?>("ClientAccountInformationClientID")
                        .HasColumnType("int");

                    b.HasKey("Key");

                    b.HasIndex("ClientAccountInformationClientID");

                    b.ToTable("ClientDocuments");
                });

            modelBuilder.Entity("LotusTransformation.Models.ClientModels.ClientPostSessionResponses", b =>
                {
                    b.Property<int>("Key")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Key"), 1L, 1);

                    b.Property<int?>("ClientAccountInformationClientID")
                        .HasColumnType("int");

                    b.Property<string>("QuestionFive")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuestionFour")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuestionOne")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuestionSix")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuestionThree")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuestionTwo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Key");

                    b.HasIndex("ClientAccountInformationClientID");

                    b.ToTable("ClientPostSessionResponses");
                });

            modelBuilder.Entity("LotusTransformation.Models.ClientModels.ClientPreSessionResponses", b =>
                {
                    b.Property<int>("Key")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Key"), 1L, 1);

                    b.Property<int?>("ClientAccountInformationClientID")
                        .HasColumnType("int");

                    b.Property<string>("QuestionFive")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuestionFour")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuestionOne")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuestionSeven")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuestionSix")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuestionThree")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuestionTwo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Key");

                    b.HasIndex("ClientAccountInformationClientID");

                    b.ToTable("ClientPreSessionResponses");
                });

            modelBuilder.Entity("LotusTransformation.Models.ClientWorkInformation", b =>
                {
                    b.Property<int>("Key")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Key"), 1L, 1);

                    b.Property<int?>("ClientID")
                        .HasColumnType("int");

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyPostal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyStreetAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Occupation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkEmail")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Key");

                    b.HasIndex("ClientID");

                    b.ToTable("ClientWorkInformation");
                });

            modelBuilder.Entity("LotusTransformation.Models.ClientAccountInformation", b =>
                {
                    b.HasOne("LotusTransformation.Models.ClientContactInformation", "Contact")
                        .WithMany()
                        .HasForeignKey("ContactID");

                    b.HasOne("LotusTransformation.Models.ClientWorkInformation", "Employment")
                        .WithMany()
                        .HasForeignKey("EmploymentID");

                    b.Navigation("Contact");

                    b.Navigation("Employment");
                });

            modelBuilder.Entity("LotusTransformation.Models.ClientContactInformation", b =>
                {
                    b.HasOne("LotusTransformation.Models.ClientAccountInformation", "ClientAccountInformation")
                        .WithMany()
                        .HasForeignKey("ClientID");

                    b.Navigation("ClientAccountInformation");
                });

            modelBuilder.Entity("LotusTransformation.Models.ClientDocuments", b =>
                {
                    b.HasOne("LotusTransformation.Models.ClientAccountInformation", null)
                        .WithMany("ClientDocuments")
                        .HasForeignKey("ClientAccountInformationClientID");
                });

            modelBuilder.Entity("LotusTransformation.Models.ClientModels.ClientPostSessionResponses", b =>
                {
                    b.HasOne("LotusTransformation.Models.ClientAccountInformation", "ClientAccountInformation")
                        .WithMany("ClientPostSessionResponses")
                        .HasForeignKey("ClientAccountInformationClientID");

                    b.Navigation("ClientAccountInformation");
                });

            modelBuilder.Entity("LotusTransformation.Models.ClientModels.ClientPreSessionResponses", b =>
                {
                    b.HasOne("LotusTransformation.Models.ClientAccountInformation", null)
                        .WithMany("ClientPreSessionResponses")
                        .HasForeignKey("ClientAccountInformationClientID");
                });

            modelBuilder.Entity("LotusTransformation.Models.ClientWorkInformation", b =>
                {
                    b.HasOne("LotusTransformation.Models.ClientAccountInformation", "ClientAccountInformation")
                        .WithMany()
                        .HasForeignKey("ClientID");

                    b.Navigation("ClientAccountInformation");
                });

            modelBuilder.Entity("LotusTransformation.Models.ClientAccountInformation", b =>
                {
                    b.Navigation("ClientDocuments");

                    b.Navigation("ClientPostSessionResponses");

                    b.Navigation("ClientPreSessionResponses");
                });
#pragma warning restore 612, 618
        }
    }
}
