// <auto-generated />
using System;
using LotusTransformation.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LotusTransformation.Migrations
{
    [DbContext(typeof(LotusTransformationDBContext))]
    partial class LotusTransformationDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("LotusTransformation.Models.AdminClientNotes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.HasKey("Id");

                    b.ToTable("AdminClientNotes");
                });

            modelBuilder.Entity("LotusTransformation.Models.Administrator", b =>
                {
                    b.Property<int>("Key")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Key"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Key");

                    b.ToTable("Admin");
                });

            modelBuilder.Entity("LotusTransformation.Models.ClientAccountInformation", b =>
                {
                    b.Property<long>("ClientID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ClientID"), 1L, 1);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleInitial")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ClientID");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("ClientAccountInformation");
                });

            modelBuilder.Entity("LotusTransformation.Models.ClientContactInformation", b =>
                {
                    b.Property<long>("ContactID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ContactID"), 1L, 1);

                    b.Property<string>("Address1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ClientContactID")
                        .HasColumnType("bigint");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StateOrProvince")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZIPorPostal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ContactID");

                    b.HasIndex("ClientContactID")
                        .IsUnique()
                        .HasFilter("[ClientContactID] IS NOT NULL");

                    b.ToTable("ClientContactInformation");
                });

            modelBuilder.Entity("LotusTransformation.Models.ClientDocuments", b =>
                {
                    b.Property<int>("Key")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Key"), 1L, 1);

                    b.Property<long?>("DocumentID")
                        .HasColumnType("bigint");

                    b.HasKey("Key");

                    b.HasIndex("DocumentID");

                    b.ToTable("ClientDocuments");
                });

            modelBuilder.Entity("LotusTransformation.Models.ClientModels.ClientPostSessionResponses", b =>
                {
                    b.Property<long>("Key")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Key"), 1L, 1);

                    b.Property<long?>("PostSessionID")
                        .HasColumnType("bigint");

                    b.Property<string>("QuestionFive")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuestionFour")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuestionOne")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuestionSix")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuestionThree")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuestionTwo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Key");

                    b.HasIndex("PostSessionID");

                    b.ToTable("ClientPostSessionResponses");
                });

            modelBuilder.Entity("LotusTransformation.Models.ClientModels.ClientPreSessionResponses", b =>
                {
                    b.Property<long>("Key")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Key"), 1L, 1);

                    b.Property<long?>("PreSessionID")
                        .HasColumnType("bigint");

                    b.Property<string>("QuestionFive")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuestionFour")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuestionOne")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuestionSeven")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuestionSix")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuestionThree")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuestionTwo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Key");

                    b.HasIndex("PreSessionID");

                    b.ToTable("ClientPreSessionResponses");
                });

            modelBuilder.Entity("LotusTransformation.Models.ClientWorkInformation", b =>
                {
                    b.Property<long>("Key")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Key"), 1L, 1);

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyPostal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyStreetAddress1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyStreetAddress2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompnayCountry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("EmploymentID")
                        .HasColumnType("bigint");

                    b.Property<string>("Occupation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkEmail")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Key");

                    b.HasIndex("EmploymentID")
                        .IsUnique()
                        .HasFilter("[EmploymentID] IS NOT NULL");

                    b.ToTable("ClientWorkInformation");
                });

            modelBuilder.Entity("LotusTransformation.Models.ClientContactInformation", b =>
                {
                    b.HasOne("LotusTransformation.Models.ClientAccountInformation", "Client")
                        .WithOne("Contact")
                        .HasForeignKey("LotusTransformation.Models.ClientContactInformation", "ClientContactID");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("LotusTransformation.Models.ClientDocuments", b =>
                {
                    b.HasOne("LotusTransformation.Models.ClientAccountInformation", "Client")
                        .WithMany("Documents")
                        .HasForeignKey("DocumentID");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("LotusTransformation.Models.ClientModels.ClientPostSessionResponses", b =>
                {
                    b.HasOne("LotusTransformation.Models.ClientAccountInformation", "Client")
                        .WithMany("PostSessionResponses")
                        .HasForeignKey("PostSessionID");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("LotusTransformation.Models.ClientModels.ClientPreSessionResponses", b =>
                {
                    b.HasOne("LotusTransformation.Models.ClientAccountInformation", "Client")
                        .WithMany("PreSessionResponses")
                        .HasForeignKey("PreSessionID");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("LotusTransformation.Models.ClientWorkInformation", b =>
                {
                    b.HasOne("LotusTransformation.Models.ClientAccountInformation", "Client")
                        .WithOne("Employment")
                        .HasForeignKey("LotusTransformation.Models.ClientWorkInformation", "EmploymentID");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("LotusTransformation.Models.ClientAccountInformation", b =>
                {
                    b.Navigation("Contact");

                    b.Navigation("Documents");

                    b.Navigation("Employment");

                    b.Navigation("PostSessionResponses");

                    b.Navigation("PreSessionResponses");
                });
#pragma warning restore 612, 618
        }
    }
}
